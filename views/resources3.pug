extends layout

block content
    .resources
        h2.boldText.pageTitle Resources
        //- h4 RightsForHealth is dedicated to increasing access to resources for immigrant communities in New York State. 
        h4 This resource library contains links to helpful and relevant external resources for immigrant communities. The resources have been compiled and checked for accuracy by the RightsforHealth team. 
        h4 You can browse by topic.
        //- h4 You can browse by our overall areas of focus, research methodology, type of media we examine, and the specific topics we study. If you are interested in any studies that you cannot access here, please contact info@commhsp.org.
        br
        br
        - var activeSubsectionObject = resourcesInfo.find(sub_section => {return sub_section.value===activeSubsection})
        .ui.grid.centered 
            .column.four.wide.sidebarMenu
                .ui.menu.fluid.vertical
                    each sectionTitle, index in sectionTitles 
                        .item(class={addBorderRadius: index===0})
                            h3.section_title(class={addBorderRadius: index===0}) #{sectionTitle}
                            - var sub_sections = resourcesInfo.filter(sub_section => {return sub_section.section===sectionTitle})
                            .subsection
                                each sub_section in sub_sections
                                    - var isActiveSubSection = sub_section["value"]===activeSubsectionObject["value"]
                                    a(href="/resources/"+sub_section["value"])
                                        p.subsection_title(class={active: isActiveSubSection}) 
                                            | #{sub_section["title"]}
            .column.twelve.wide.fullWidthMenu 
                .ui.accordion.menu.fluid.vertical
                    each sectionTitle, index in sectionTitles 
                        - var isActiveSection = activeSubsectionObject["section"]===sectionTitle
                        .item
                            .title(class={addBorderRadius: index===0, active: isActiveSection})
                                h3.section_title(class={addBorderRadius: index===0}) 
                                    i.dropdown.icon
                                    | #{sectionTitle}
                            .content(class={active: isActiveSection})
                                - var sub_sections = resourcesInfo.filter(sub_section => {return sub_section.section===sectionTitle})
                                .subsection
                                    each sub_section in sub_sections
                                        - var isActiveSubSection = sub_section["value"]===activeSubsectionObject["value"]
                                        a(href="/resources/"+sub_section["value"])
                                            p.subsection_title(class={active: isActiveSubSection}) 
                                                | #{sub_section["title"]}
            .column.twelve.wide
                - var language_colortags = { 'English': 'blue', 'Spanish': 'orange', 'Chinese': 'red', 'Vietnamese': 'purple'}
                h2.boldText.subTitle #{activeSubsectionObject["title"]}
                .ui.grid.stackable.two.column
                    each resource in activeSubsectionObject["content"]
                        .column
                            .ui.fluid.card(href=resource["url"]).resourceCard
                                .content
                                    i.right.floated.icon.external.alternate.externalLinkIcon  
                                    .header !{resource["title"].replace(/\n/g, '<br/>')}  
                                    .description.source   
                                        if resource["source"]
                                            | #{resource["source"]}
                                        //- a.blue(href=resource["url"], target="_blank") #{resource["url"]}
                                if resource["description"]
                                    .content
                                        .description !{resource["description"].replace(/\n/g, '<br/>')}
                                .content.extra
                                    //- if resource["description"]
                                    //-     .description.addBottomMargin #{resource["description"]}
                                    each language in resource["languages"]
                                        .ui.label(class=language_colortags[language]) #{language}
        h5.alignItems-center Last Updated: 07 Jan 2022 

block styles 
    link(rel='stylesheet', href='/css/resources3.css')

block scripts
    script. 
        function clickSubsection(value){
            window.location.href=`/resources/${value}`;
        }
    script. 
        $('.resourceCard').on('click', function(){
            const redirectToURL = $(this)[0].getAttribute("href");
            window.open(redirectToURL,'_blank');
        })
    //- script. 
    //-     $('.resourceCard').hover(
    //-         function(){
    //-             //- mouse over
    //-             $(this).css("background-color", "#f4f4f4");
    //-             $(this).find('.header').css("background-color", "#f4f4f4");
    //-             $(this).find('.description').css("background-color", "#f4f4f4");
    //-             $(this).find('.content.extra').css("background-color", "red !important");
    //-         }, 
    //-         function(){
    //-             //- mouse out 
    //-             $(this).css("background-color", "");
    //-             $(this).find('.header').css("background-color", "");
    //-             $(this).find('.description').css("background-color", "");
    //-             $(this).find('.content.extra').css("background-color", "");
    //-         })